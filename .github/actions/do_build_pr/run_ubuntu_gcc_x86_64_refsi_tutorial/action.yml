name: build_pr_ubuntu_gcc_x86_64_refsi_tutorial
description: Build pr ubuntu_gcc_x86_64_refsi_tutorial

inputs:
  cache_seed:
    type: boolean
    default: false
  setup_new_target_params:
    type: string
    # default to end - this is most reflective of what needs tested most
    default: '-f "refsi_wrapper_pass;clmul;replace_mem"'
  tutorial_point:
    type: string
    # default to end - set to start and use empty setup_new_target_flags for start for most use cases
    default: 'end'

runs:
  using: "composite"
  steps:
      - name: Install requirements
        shell: bash  
        run: |
          sudo apt install -y virtualenv

      # TODO: refsi_tutorial start
      - name: remove any old dirs and set up new target
        shell: bash  
        run: |
          rm -rf build
          git config --global --add safe.directory $GITHUB_WORKSPACE
          virtualenv newenv
          source newenv/bin/activate
          pip install cookiecutter
          scripts/setup_new_target_tutorial.sh -s ${{ inputs.tutorial_point }} -e $GITHUB_WORKSPACE/refsi_tutorial ${{ inputs.setup_new_target_flags}} $PWD

      - name: build refsi_tutorial
        uses: ./.github/actions/do_build_ock
        with:
          build_targets: install
          mux_targets_enable: refsi_tutorial
          debug_support: ON
          offline_kernel_tests: OFF
          source_dir: $GITHUB_WORKSPACE/refsi_tutorial
          extra_flags: '-DCA_REFSI_TUTORIAL_ENABLED=ON -DCA_EXTERNAL_ONEAPI_CON_KIT_DIR=$GITHUB_WORKSPACE -DCA_EXTERNAL_REFSI_TUTORIAL_HAL_DIR=$GITHUB_WORKSPACE/refsi_tutorial/hal_refsi_tutorial'

      - name: run test (end only)
        if: inputs.cache_seed != 'true' && inputs.tutorial_point == 'end'
        shell: bash
         # Run just a quick lit / UnitCL test for now, hal_tutorial causes some failures at present
        run: |
          ninja -Cbuild check-ock-refsi_tutorial-lit
          OCL_ICD_VENDORS=/dev/null OCL_ICD_FILENAMES=$PWD/build/oneAPIConstructionKit/lib/libCL.so \
            $PWD/build/oneAPIConstructionKit/bin/UnitCL \
            --gtest_filter=Execution/Execution.Task_01_02_Add/OpenCLC

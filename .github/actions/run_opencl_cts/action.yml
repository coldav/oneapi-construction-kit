name: run opencl cts
description: run opencl cts

# This action is not standalone and assumes it has been run after the build_opencl_cts action.

inputs:
  target:
    description: 'target architecture'
  test_type:
    description: 'quick | full'
    default: "quick"

runs:
  using: "composite"
  steps:
    - name: Download ock artefact
      uses: actions/download-artifact@v4
      with:
        name: ock_${{inputs.target}}
        path: install_ock

    - name: Run opencl cts
      shell: bash
      env:
        CTS_CSV_FILE: opencl_conformance_tests_${{inputs.test_type}}.csv
        CTS_FILTER: cts-3.0-online-ignore-linux-host.csv        
        
      run: |
        set -x
        pwd
        echo ls $PWD/test_conformance
        # Todo: always download artefact and ensure artefacts are stored with permissions using an action that uses tar
        chmod +x test_conformance/*/*
        echo "Running OpenCL CTS tests with CTS file $CTS_CSV_FILE with filter $CTS_FILTER"
        echo > expect_fail.csv
        # $CTS_FILTER ignores certain test, so is treated differently to temporary fails.
        [ -f .github/opencl_cts/expect_fail_all.csv ] && cat .github/opencl_cts/expect_fail_all.csv >> expect_fail.csv
        [ -f .github/opencl_cts/expect_fail_${{ inputs.target }}.csv ] && cat .github/opencl_cts/expect_fail_${{ inputs.target }}.csv >> expect_fail.csv
        cat expect_fail.csv "$GITHUB_WORKSPACE/source/cl/scripts/$CTS_FILTER" > disable.csv 
        python -u "$GITHUB_WORKSPACE/scripts/testing/run_cities.py" -v \
               --color=always --timeout 05:00:00 \
               -b "$GITHUB_WORKSPACE/test_conformance" \
               -L "$GITHUB_WORKSPACE/install_icd/lib" \
               -e "CLC_EXECUTABLE=$GITHUB_WORKSPACE/install_ock/bin/clc" \
               -e "OCL_ICD_FILENAMES=$GITHUB_WORKSPACE/install_ock/lib/libCL.so" \
               -e "CL_PLATFORM_INDEX=0" \
               -s "$GITHUB_WORKSPACE/test_conformance/$CTS_CSV_FILE" \
               -i disable.csv

    - name: Run expected failed opencl cts
      shell: bash
      run: |
        echo "Running OpenCL CTS tests with CTS file $CTS_CSV_FILE with filter $CTS_FILTER"
        set -x
        python -u "$GITHUB_WORKSPACE/scripts/testing/run_cities.py" -v \
               --color=always --timeout 05:00:00 \
               -b "$GITHUB_WORKSPACE/test_conformance" \
               -L "$GITHUB_WORKSPACE/install_icd/lib" \
               -e "CLC_EXECUTABLE=$GITHUB_WORKSPACE/install_ock/bin/clc" \
               -e "OCL_ICD_FILENAMES=$GITHUB_WORKSPACE/install_ock/lib/libCL.so" \
               -e "CL_PLATFORM_INDEX=0" \
               -s expect_fail.csv || echo failed as expected
